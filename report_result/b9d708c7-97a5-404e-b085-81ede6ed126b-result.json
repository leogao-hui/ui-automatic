{"name": "test_device_ip_mandatory", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_cases.test_device_management.test_add_device.test_add_device.TestAddDevice object at 0x000001C09545B048>\nstate_add_device_management_class = <OperationalLayer.deviceManagement.deviceManagementAddOperate.DeviceManagementAddOperate object at 0x000001C095493DD8>\n\n    @allure.story('这是一个测试设备ip必填项的case')\n    def test_device_ip_mandatory(self, state_add_device_management_class):\n        '''\n        用例描述：设备ip必填\n        :param state_add_device_management_class:\n        :param state_driver:\n        :return:\n        '''\n        state_add_device_management_class.click_device_management()\n        state_add_device_management_class.input_device_name_ip(device_ip_empty_add_device_data.\n                                                               device_ip_empty_data.get('device_name'),\n                                                               device_ip_empty_add_device_data.\n                                                               device_ip_empty_data.get('device_ip'))\n        state_add_device_management_class.choose_device_type()\n    \n        state_add_device_management_class.choose_organization_manufacturer(device_name_empty_add_device_data.\n>                                                                          device_name_empty_data.get('manufacturer'))\n\ntest_cases\\test_device_management\\test_add_device\\test_add_device.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nOperationalLayer\\deviceManagement\\deviceManagementAddOperate.py:32: in choose_organization_manufacturer\n    self.use_js_click(DeviceManagementElement.total_military_area_command)\nBase\\base.py:89: in use_js_click\n    target = self.find_element(locator)\nBase\\base.py:29: in find_element\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ac021723d2681fb897208eb26104f988\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000001C0954DE5F8>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\keda\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "\n        用例描述：设备ip必填\n        :param state_add_device_management_class:\n        :param state_driver:\n        :return:\n        ", "steps": [{"name": "1.点击设备管理 2.点击新增按钮", "status": "passed", "start": 1583225187873, "stop": 1583225189656}, {"name": "3.输入设备名称 4.输入设备ip", "status": "passed", "parameters": [{"name": "device_name", "value": "'测试设备'"}, {"name": "device_ip", "value": "''"}], "start": 1583225189657, "stop": 1583225189830}, {"name": "选择设备类型", "status": "passed", "start": 1583225189830, "stop": 1583225189867}, {"name": "选择所属机构，输入生产厂家, 点击确定", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"c:\\users\\keda\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\automatic\\ui-automatic\\OperationalLayer\\deviceManagement\\deviceManagementAddOperate.py\", line 32, in choose_organization_manufacturer\n    self.use_js_click(DeviceManagementElement.total_military_area_command)\n  File \"E:\\automatic\\ui-automatic\\Base\\base.py\", line 89, in use_js_click\n    target = self.find_element(locator)\n  File \"E:\\automatic\\ui-automatic\\Base\\base.py\", line 29, in find_element\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n  File \"c:\\users\\keda\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "manufacturer", "value": "'测试厂家'"}], "start": 1583225189867, "stop": 1583225195080}], "attachments": [{"name": "stdout", "source": "09bfb97f-4c12-47fe-9140-d8acceb04200-attachment.txt", "type": "text/plain"}], "start": 1583225187873, "stop": 1583225195084, "uuid": "1cba960d-e171-4129-a1df-fb302933aa21", "historyId": "d95c57c02bc6949741fc5ea3af168d1e", "testCaseId": "de35cbf3b5088c66685965c1a414ceaf", "fullName": "test_cases.test_device_management.test_add_device.test_add_device.TestAddDevice#test_device_ip_mandatory", "labels": [{"name": "story", "value": "这是一个测试设备ip必填项的case"}, {"name": "feature", "value": "设备管理"}, {"name": "parentSuite", "value": "test_cases.test_device_management.test_add_device"}, {"name": "suite", "value": "test_add_device"}, {"name": "subSuite", "value": "TestAddDevice"}, {"name": "host", "value": "DESKTOP-IJ0L9OR"}, {"name": "thread", "value": "5996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_device_management.test_add_device.test_add_device"}]}