{"name": "test_normal_add_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_cases.test_device_management.test_add_device.TestAddDevice object at 0x10e5c5198>\nstate_add_device_management_class = <OperationalLayer.deviceManagement.deviceManagementAddOperate.DeviceManagementAddOperate object at 0x10e5efd68>\n\n    @allure.story('这是一个测试正常新增设备的case')\n    def test_normal_add_user(self, state_add_device_management_class):\n        '''\n        用例描述：输入编号，姓名，账号名，选择所属结构，正常新增用户\n        :return:\n        '''\n>       state_add_device_management_class.click_device_management()\n\ntest_cases/test_device_management/test_add_device.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nOperationalLayer/deviceManagement/deviceManagementAddOperate.py:16: in click_device_management\n    self.click(DeviceManagementElement.device_management_button)\nBase/base.py:50: in click\n    ele = self.find_element(locator)\nBase/base.py:29: in find_element\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"94053ca21ca57d0c1d9378257770815b\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x10e5a0160>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../Documents/python/ui-automation/venv/lib/python3.6/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "description": "\n        用例描述：输入编号，姓名，账号名，选择所属结构，正常新增用户\n        :return:\n        ", "steps": [{"name": "点击设备管理", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/kouhui/Documents/python/ui-automation/venv/lib/python3.6/site-packages/allure_commons/_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"/Users/kouhui/Desktop/automatic/ui-automatic/OperationalLayer/deviceManagement/deviceManagementAddOperate.py\", line 16, in click_device_management\n    self.click(DeviceManagementElement.device_management_button)\n  File \"/Users/kouhui/Desktop/automatic/ui-automatic/Base/base.py\", line 50, in click\n    ele = self.find_element(locator)\n  File \"/Users/kouhui/Desktop/automatic/ui-automatic/Base/base.py\", line 29, in find_element\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n  File \"/Users/kouhui/Documents/python/ui-automation/venv/lib/python3.6/site-packages/selenium/webdriver/support/wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1577411541099, "stop": 1577411561433}], "attachments": [{"name": "stdout", "source": "ba15f132-f4cc-459f-9493-336ef90f8661-attachment.txt", "type": "text/plain"}], "start": 1577411541098, "stop": 1577411561440, "uuid": "5cfeac04-15db-4c8d-bbf6-783f7d7f1bd0", "historyId": "27e69827bdf8a65d0aac598fe45f88b2", "testCaseId": "feb7a83ba3929fb2ed2d2dc167b70891", "fullName": "test_cases.test_device_management.test_add_device.TestAddDevice#test_normal_add_user", "labels": [{"name": "story", "value": "这是一个测试正常新增设备的case"}, {"name": "feature", "value": "设备管理"}, {"name": "parentSuite", "value": "test_cases.test_device_management"}, {"name": "suite", "value": "test_add_device"}, {"name": "subSuite", "value": "TestAddDevice"}, {"name": "host", "value": "kouhuideMacBook-Air.local"}, {"name": "thread", "value": "22672-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_device_management.test_add_device"}]}