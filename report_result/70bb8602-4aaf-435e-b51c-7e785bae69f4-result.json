{"name": "test_normal_add_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "state_login_class = <OperationalLayer.Login.login.LoginOperate object at 0x10705c630>\n\n    @pytest.fixture()\n    def normal_login(state_login_class):\n        '''\n        用例描述：输入正确管理员账号，正确密码，验证码（随便）正常登录\n        :return:\n        '''\n    \n        state_login_class.get_login_url()\n        state_login_class.input_account(noraml_login_data.account, noraml_login_data.password,\n>                                       noraml_login_data.verification_code)\n\ntest_cases/test_user_management/conftest.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nOperationalLayer/Login/login.py:23: in input_account\n    self.send_keys(LoginElement.account_input_box, account)\nBase/base.py:45: in send_keys\n    ele = self.find_element(locator)\nBase/base.py:29: in find_element\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"237cc26efe1667a1974ada42693b6d29\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x10705cd30>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../Documents/python/ui-automation/venv/lib/python3.6/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "description": "\n        用例描述：输入编号，姓名，账号名，选择所属结构，正常新增用户\n        :return:\n        ", "attachments": [{"name": "stdout", "source": "dc537601-212d-4ae8-8fca-f3c683aa602d-attachment.txt", "type": "text/plain"}], "start": 1577411054841, "stop": 1577411054841, "uuid": "20aa8842-0ac8-4802-8643-6fabd28bb04c", "historyId": "57043862478cc7a6df9d708bda1389f6", "testCaseId": "944d658478d0317890e9d93d08217b10", "fullName": "test_cases.test_user_management.test_add_user.TestAddUser#test_normal_add_user", "labels": [{"name": "story", "value": "这是一个测试正常新增用户的case"}, {"name": "feature", "value": "成员管理,新增人员"}, {"name": "parentSuite", "value": "test_cases.test_user_management"}, {"name": "suite", "value": "test_add_user"}, {"name": "subSuite", "value": "TestAddUser"}, {"name": "host", "value": "kouhuideMacBook-Air.local"}, {"name": "thread", "value": "21842-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_user_management.test_add_user"}]}